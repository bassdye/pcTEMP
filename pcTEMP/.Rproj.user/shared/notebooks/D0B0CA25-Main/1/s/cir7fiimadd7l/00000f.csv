"0","if(exists(""number_treatments"")) {"
"0","  exp_data <- subset(prop_dat, phase == test_phase & treatment == test_treatment)"
"0","} else {"
"0","  exp_data <- subset(prop_dat, phase == phase)"
"0","}"
"0",""
"0","# Proportion of available space per compartment and temperature "
"0","c1 <- 1/8 # C1: 33 degrees: compartment 4"
"0","c2 <- 2/8 # C2: 30 degrees: compartments 3 and 5"
"0","c3 <- 2/8 # C3: 27 degrees: compartments 2 and 6"
"0","c4 <- 2/8 # C4: 24 degrees: compartments 1 and 7"
"0","c5 <- 1/8 # C5: 21 degrees: compartment 8"
"0",""
"0","# Create empty list to store matrices"
"0","all_mat <- list()"
"0","for (tt in 1:nrow(exp_data)) {"
"0","  all_mat[[tt]] <- matrix(data = NA, nrow = nrow(exp_data), ncol = 5); "
"0","}"
"0",""
"0","# Fill in matrix for each experimental group (n = 5); (table 1 in Aebischer et al. 1993)"
"0","for (i in 1:nrow(exp_data)) {"
"0","  # Create blank matrix to temporarily hold data for each iteration"
"0","  rank_mat <- matrix(data = NA, nrow = 5, ncol = 5); "
"0","  # Fill in matrix "
"0","  # Column 1"
"0","  rank_mat[2,1] <- log(exp_data$C2[i]/exp_data$C1[i]) - log(c2/c1) "
"0","  rank_mat[3,1] <- log(exp_data$C3[i]/exp_data$C1[i]) - log(c3/c1)"
"0","  rank_mat[4,1] <- log(exp_data$C4[i]/exp_data$C1[i]) - log(c4/c1)"
"0","  rank_mat[5,1] <- log(exp_data$C5[i]/exp_data$C1[i]) - log(c5/c1)"
"0","  "
"0","  # Column 2"
"0","  rank_mat[1,2] <- log(exp_data$C1[i]/exp_data$C2[i]) - log(c1/c2)"
"0","  rank_mat[3,2] <- log(exp_data$C3[i]/exp_data$C2[i]) - log(c3/c2)"
"0","  rank_mat[4,2] <- log(exp_data$C4[i]/exp_data$C2[i]) - log(c4/c2)"
"0","  rank_mat[5,2] <- log(exp_data$C5[i]/exp_data$C2[i]) - log(c5/c2)"
"0","  "
"0","  # Column 3"
"0","  rank_mat[1,3] <- log(exp_data$C1[i]/exp_data$C3[i]) - log(c1/c3)"
"0","  rank_mat[2,3] <- log(exp_data$C2[i]/exp_data$C3[i]) - log(c2/c3)"
"0","  rank_mat[4,3] <- log(exp_data$C4[i]/exp_data$C3[i]) - log(c4/c3)"
"0","  rank_mat[5,3] <- log(exp_data$C5[i]/exp_data$C3[i]) - log(c5/c3)"
"0","  "
"0","  # Column 4"
"0","  rank_mat[1,4] <- log(exp_data$C1[i]/exp_data$C4[i]) - log(c1/c4)"
"0","  rank_mat[2,4] <- log(exp_data$C2[i]/exp_data$C4[i]) - log(c2/c4)"
"0","  rank_mat[3,4] <- log(exp_data$C3[i]/exp_data$C4[i]) - log(c3/c4)"
"0","  rank_mat[5,4] <- log(exp_data$C5[i]/exp_data$C4[i]) - log(c5/c4)"
"0","  "
"0","  # Column 5"
"0","  rank_mat[1,5] <- log(exp_data$C1[i]/exp_data$C5[i]) - log(c1/c5)"
"0","  rank_mat[2,5] <- log(exp_data$C2[i]/exp_data$C5[i]) - log(c2/c5)"
"0","  rank_mat[3,5] <- log(exp_data$C3[i]/exp_data$C5[i]) - log(c3/c5)"
"0","  rank_mat[4,5] <- log(exp_data$C4[i]/exp_data$C5[i]) - log(c4/c5)"
"0","  "
"0","  all_mat[[i]] <- rank_mat"
"0","  rm(rank_mat) # Remove variable for next iteration"
"0","}"
"0",""
"0","# Calculate element wise mean, sd, se"
"0","# Make a 3D array from list of matrices for calculation purposes"
"0","arr <- array(unlist(all_mat), c(5, 5, nrow(exp_data)))"
"0","# Calculate mean, sd, se of third dimension (i.e. mean of all experiments)"
"0","rank_mat_mean <- apply(arr, 1:2, mean)"
"0","rank_mat_sd <- apply(arr, 1:2, sd)"
"0","rank_mat_var <- apply(arr, 1:2, var)"
"0","rank_mat_se <-  rank_mat_sd / sqrt(nrow(arr))"
"0",""
"0","# Sum the number of positive values for each row to rank the habitats in increasing order of preference (i.e. greatest number = most preferred)"
"0","# Add empty column to matrix to store data"
"0","rank_mat_mean <- cbind(rank_mat_mean, NA)"
"0","# Change NAs to 0 (changing the diagonal NAs to zero doesn't change calculation)"
"0","rank_mat_mean[is.na(rank_mat_mean)] <- 0 "
"0","for (ii in 1:nrow(rank_mat_mean)) {"
"0","  tt <- rank_mat_mean[ii, ] > 0"
"0","  rank_mat_mean[ii, 6] <- length(tt[tt] == TRUE)"
"0","}"
"0","# Temperature ranking matrix"
"0","row.names(rank_mat_mean) <- temp_range"
"0","colnames(rank_mat_mean) <- c(temp_range, ""Rankings"")"
"0",""
"0","# Show this as output in function"
"0","print(""The temperature preference ranking matrix""); rank_mat_mean"
"1","[1]"
"1"," ""The temperature preference ranking matrix"""
"1","
"
"1","    "
"1","       33*C"
"1","        30*C"
"1","        27*C"
"1","       24*C"
"1","      21*C"
"1"," Rankings"
"1","
33*C"
"1","  0.0000000"
"1"," -0.30087629"
"1"," -0.28854383"
"1","  0.1670028"
"1"," 0.6501981"
"1","        2"
"1","
30*C"
"1","  0.3008763"
"1","  0.00000000"
"1","  0.01233246"
"1","  0.4678790"
"1"," 0.9510743"
"1","        4"
"1","
27*C"
"1","  0.2885438"
"1"," -0.01233246"
"1","  0.00000000"
"1","  0.4555466"
"1"," 0.9387419"
"1","        3"
"1","
24*C"
"1"," -0.1670028"
"1"," -0.46787904"
"1"," -0.45554658"
"1","  0.0000000"
"1"," 0.4831953"
"1","        1"
"1","
21*C"
"1"," -0.6501981"
"1"," -0.95107434"
"1"," -0.93874188"
"1"," -0.4831953"
"1"," 0.0000000"
"1","        0"
"1","
"
